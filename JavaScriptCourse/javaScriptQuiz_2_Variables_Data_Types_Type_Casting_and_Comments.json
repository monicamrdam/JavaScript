{
    "questions":[
        { 
            "__comment": "1",
           "question": "What does shadowing mean? /p>?.",
           "answers":[
             {"option": "Deleting and rewriting a selected piece of program code.", "answer":"false"},
             {"option": "Declaring a local variable with the same name as the previously declared global variable.", "answer":"true"},
             {"option": "Declaring a global variable with the same name as a previously declared global variable", "answer":"false"},
             {"option": "Changing the value of a variable.", "answer":"false"}
           ]
        },
        { 
           "__comment": "2",
            "question": "In the daysOfWeek variable, we place un array with the names of the days of the week. To reverse the order of the array elements, we should call:",
           "answers":[
             {"option": "daysOfWeek.reverse();", "answer":"true"},
             {"option": "reverse daysOfWeek;", "answer":"false"},
             {"option": "invert(daysOfWeek);", "answer":"false"},
             {"option": "daysOfWeek.invert();", "answer":"false"}
           ]
        },
        { 
           "__comment": "3",
           "question": "We need to come up with a name for a variable where we will store the age of a user. All of teh following variable names are formally correct, but one of them is the most readable, indicate which one:",
           "answers":[
             {"option": "age.", "answer":"false"},
             {"option": "userAge.", "answer":"true"}, 
             {"option": "ua.", "answer":"false"},
             {"option": "user", "answer":"false"}
           ]
        },
        { 
           "__comment": "4",
            "question": "By default, JavaScript allows us to write to an undeclared variable (it declares it implicitly for us). If we want the interpreter to reat such a situacion as an error, we have to:",
           "answers":[
             {"option": "place the 'prevent undeclared variables'; directive at the beginning of the script.", "answer":"false"},
             {"option": "place the 'use strict'; directive at the beginning of the script.", "answer":"true"},
             {"option": "perform all writes to variable sin a block of code delimited by braces.", "answer":"false"},
             {"option": "place the 'use strict'; directive before each write we want to protect.", "answer":"false"}
           ]
        },
        { 
           "__comment": "5",
           "question": "We want to convert the string '1024' to type Number and store the result in variable n. Point out the correct statement:",
           "answers":[
             {"option": "let n = String ('1024');", "answer":"false"},
             {"option": "let n = '1024' + 0;", "answer":"false"},
             {"option": "let n = Number ('1024');", "answer":"true"},
             {"option": "let n = StringToNumber('1024');", "answer":"false"}
           ]
        },
        { 
           "__comment": "6",
           "question": "Analyze the code snippet: /n let name; /n let age; { let height;{let weight; console.log(name);} console.log(name);} We have access to the weight variable: ",
           "answers":[
             {"option": "Throughout the program.", "answer":"false"},
             {"option": "In the part marked 1.", "answer":"true"},
             {"option": "In the part marked 2.", "answer":"false"},
             {"option": "Nowhere, as we have no access at all (the variables has not been initizlized ).", "answer":"false"}
           ]
        },
        { 
           "__comment": "7",
            "question": "We declare an object called dog, with two fields: age and name: let dog = { age: 5, name: 'Axel'}; . To change the value of the age field to 6, we need to perform:",
           "answers":[
             {"option": "dog [age] = 6;", "answer":"false"},
             {"option": "dog {age} = 6;", "answer":"false"},
             {"option": "dog.age = 6;.", "answer":"true"} ,
             {"option": "age of dog = 6;.", "answer":"false"}
           ]
        },
        { 
           "__comment": "8" ,
           "question": "We can replace the declaration 1et x = 0x21; with:",
           "answers":[
             {"option": "let x = 17;", "answer":"false"},
             {"option": "let x = 21;", "answer":"false"},
             {"option": "let x = '0x21';", "answer":"false"},
             {"option": "let x =33;", "answer":""}
           ]
        },
        { 
           "__comment": "9",
           "question": "Performing the operation: let x = 100/0; will result in:",
           "answers":[
             {"option": "An infinity value being stored in the variable x. ", "answer":""},
             {"option": "The value 0 being stored in the variable x.", "answer":"false"},
             {"option": "The value NaN being stored in the variable x.", "answer":"false"},
             {"option": "An undefined value being stored in the variable x.", "answer":"false"}
           ]
        },
        { 
           "__comment": "10",
           "question": "We have declared an array of animals let animals = ['dog', 'cat', 'hamster']; . Then we ball the method animals.push('canary');. A a result, the animals array will look like this::" ,
           "answers":[
             {"option": "['canary', dog', 'cat', 'hamster'];", "answer":"false"},
             {"option": "['dog', 'cat', 'hamster'];", "answer":"false"},
             {"option": "['dog', 'cat', 'hamster', 'canary'];.", "answer":"true"},
             {"option": "['canary'];", "answer":"false"}
           ]
        },
        { 
           "__comment": "11",
            "question": "In order to check the number of elements of the array stored in the names variable, we call:",
           "answers":[
             {"option": "names.count.", "answer":"false"},
             {"option": "names.length();.", "answer":"false"},
             {"option": "length of names;.", "answer":"false"},
             {"option": "name.length.", "answer":"true"}
           ]
        },
        { 
           "__comment": "12",
           "question": "Analyze the code snippet: let counter =0; let userName='John'; . After declaring a counter variable, we want to put a short comment with information about what the variable is used for. To do this, we modify the line with the declaration to the form: ",
           "answers":[
             {"option": "let counter = 0; //user visit counter.", "answer":"true"},
             {"option": "// let counter = 0; user visit counter.", "answer":"false"},
             {"option": "let counter = 0; /*user visit counter. ", "answer":"false"},
             {"option": "let counter = 0; # user visit counter.", "answer":"false"}
           ]
        },
        { 
           "__comment": "13",
            "question": "We have declared an array let animalts = ['dog', 'cat', 'hamster']; . We want to temporalily comment out the element 'cat'; and to do this, we cam modify the declaration as follows:",
           "answers":[
             {"option": "let animalts = ['dog', //'cat',// 'hamster'] ", "answer":"false"},
             {"option": "let animalts = ['dog', 'hambster']", "answer":"false"},
             {"option": "let animalts = ['dog', #'cat', #'hamster']", "answer":"false"},
             {"option": "let animalts = ['dog', '/*cat',*/ 'hamster']", "answer":"true"}
           ]
        },
        { 
           "__comment": "14",
           "question": "We perform the operation: let x= 'abcdefg'.slice (2,4). As a result, the value:",
           "answers":[
             {"option": "'cdef' will be written to the variable x.", "answer":"false"},
             {"option": "'cd' will be written to the variable x.", "answer":"true"},
             {"option": "'ab' will be written to the variable x.", "answer":"false"},
             {"option": "'cdefg' will be written to the variable x. " , "answer":"false"}
           ]
        }
        ,
        { 
           "__comment": "15",
           "question": "Review the following code (note the variable name): let age = 32; age = age + 1; console.log(Age);. As a result of its execution, the following should appear in the console:",
           "answers":[
             {"option": "32", "answer":"false"},
             {"option": "error message: 'Uncaught ReferenceError: Age is not defined.'", "answer":"true"},
             {"option": "Undefined", "answer":"false"},
             {"option": "33", "answer":"false"}
           ]
        }
        ,
        { 
           "__comment": "16",
           "question": "Performing the operation: let x= 20n + 10; will result in: ",
           "answers":[
             {"option": "Result in a value of 30n being stored in the variable x.", "answer":"false"},
             {"option": "Cause the program to abort due to an error.", "answer":"true"},
             {"option": "Result in the string '20n10' being stored in the variable x.", "answer":"false"},
             {"option": "Result in a value of 30 being stored in the variable x. ", "answer":"false"}
           ]
        }
        ,
        { 
           "__comment": "17",
           "question": "Performing the operation: let x = 'Alice' + 10; will result in:",
           "answers":[
             {"option": "The value 'Alice10' of String type to be stored in the variable x", "answer":"true"},
             {"option": "The value 15 of Number type to be stored in the variable x", "answer":"false"},
             {"option": "The program execution to abort due to an error.", "answer":"false"},
             {"option": "The value NaN of Number type to be stored in the variable x.", "answer":"false"}
           ]
        }
        ,
        { 
           "__comment": "18",
           "question": "Analyze the following code: let counter =100; let counter = 200, counter = 300; . As a result of its execution:",
           "answers":[
             {"option": "The program will be aborted due to an error (redeclaration of a variable).", "answer":"true"},
             {"option": "The counter variable will have the value 100.", "answer":"false"},
             {"option": "The counter variable will have the value 200.", "answer":"false"},
             {"option": "The counter variable will have the value 300.", "answer":"false"}
           ]
        }
        ,
        { 
           "__comment": "19",
           "question": "If a variable stores the value false, then the variable:",
           "answers":[
             {"option": "Is of the Math type.", "answer":"false"},
             {"option": "Will no longer be used in the program.", "answer":"false"},
             {"option": "Is of the Boolean type.", "answer":"true"},
             {"option": "Is of the Logical type.", "answer":"false"}
           ]
        }
        ,
        { 
           "__comment": "20",
           "question": "Analyze the code snippet. Identify whitch variables are local and which are global: /n let name; /n let age; { let profession; {let weight; let height;} ",
           "answers":[
             {"option": "<script>", "answer":"true"},
             {"option": "<js>", "answer":"false"},
             {"option": "<execute>", "answer":"false"},
             {"option": "<source>", "answer":"false"}
           ]
        }
        ,
        { 
           "__comment": "21",
           "question": "We want to declare a distance constant and initialize it with the value 120. What should such a declaration look like?",
           "answers":[
             {"option": "const distance; distance = 120;", "answer":"false"},
             {"option": "let constant distance = 120;", "answer":"false"},
             {"option": "const distance=120;", "answer":"true"},
             {"option": "let distance; const distance=120;", "answer":"false"}
           ]
        },
        { 
            "__comment": "22",
            "question": "The msg variable contains a String type value. Information about the number of characters of this string can be obtained using:",
            "answers":[
              {"option": "msg.length();", "answer":"false"},
              {"option": "msg.chars;", "answer":"false"},
              {"option": "msg.charsAt();", "answer":"false"},
              {"option": "msg.length;", "answer":"true"}
            ]
         },
         { 
            "__comment": "23",
            "question": "We have declared an array of selected month names let summer= ['June', 'July', 'August'];. We want to change the value 'July' stored in the array to the nummber 7: ",
            "answers":[
              {"option": "sumer[1] = 7;", "answer":"true"},
              {"option": "We cannot do this (an array can only contain elements of the same type).", "answer":"false"},
              {"option": "summer.July = 7;", "answer":"false"},
              {"option": "summer[0] = 7;", "answer":"false"}
            ]
         },
         { 
            "__comment": "24",
            "question": "We have declared an array of animals let animals = ['dog', 'cat', 'hamster'];. Then we call the method animals. pop(). As a result, the animals arrya will look like this:",
            "answers":[
              {"option": "['cat', 'hamster']", "answer":"false"},
              {"option": "['dog', 'cat', 'hamster']", "answer":"false"},
              {"option": "['hamster']", "answer":"false"},
              {"option": "['dog', 'cat']", "answer":"true"}
            ]
         },
         { 
            "__comment": "25",
            "question": "Complex (or composite) data types:",
            "answers":[
              {"option": "Is an alternative name for primitive types.", "answer":"false"},
              {"option": "Are not used in JavaScript.", "answer":"false"},
              {"option": "May consist of multiple elements, each of which is of a primitive type.", "answer":"false"},
              {"option": "May consist of multiple elements, each of which may be of a primitive or composite type. ", "answer":"true"}
            ]
         },
         { 
            "__comment": "26",
            "question": "Analyze the following code: let x = 10/100; console.log(typeof (x);. As a result of its execution:",
            "answers":[
              {"option": "It will display 'Number' in the console.", "answer":"true"},
              {"option": "An error will appear because javaScript does not allow operations on fractional numbers.", "answer":"false"},
              {"option": "It will display 0.1 in the console.", "answer":"false"},
              {"option": "It will display 'Fraction' in the console.", "answer":"false"}
            ]
         },
         { 
            "__comment": "27",
            "question": "Analyze the following code: let height= 180; {let heigh = 200; height = height + 10;} console.log (height);. As a result of its execution:",
            "answers":[
              {"option": "The program will be terminated due to an error (re-declaration of the height variable). ", "answer":"false"},
              {"option": "A value of 200 will be displayed in the console.", "answer":"false"},
              {"option": "A value of 210 will be displayed in the console.", "answer":"false"},
              {"option": "A value of 180 will be displayed in the console.", "answer":"true"}
            ]
         },
         { 
            "__comment": "28",
            "question": "Point out the correct declaration of the height variable:",
            "answers":[
              {"option": "variable height;", "answer":"false"},
              {"option": "let height;", "answer":"true"},
              {"option": "height;", "answer":"false"},
              {"option": "height is variable;", "answer":"false"}
            ]
         },
         { 
            "__comment": "29",
            "question": "Analyze the code snippet: let summer = ['June', 'July', 'August']; let index= summer.indexOf('June');. The index variable will have the value:",
            "answers":[
              {"option": "True", "answer":"false"},
              {"option": "0", "answer":"true"},
              {"option": "'June'", "answer":"false"},
              {"option": "1", "answer":"false"}
            ]
         }
       
    ]
}
